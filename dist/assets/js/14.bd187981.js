(window.webpackJsonp=window.webpackJsonp||[]).push([[14],{289:function(a,s,t){"use strict";t.r(s);var l=t(14),r=Object(l.a)({},(function(){var a=this,s=a._self._c;return s("ContentSlotsDistributor",{attrs:{"slot-key":a.$parent.slotKey}},[s("h1",{attrs:{id:"gulp"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#gulp"}},[a._v("#")]),a._v(" gulp")]),a._v(" "),s("h2",{attrs:{id:"一、-使用gulp构建文案书写工作流"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#一、-使用gulp构建文案书写工作流"}},[a._v("#")]),a._v(" 一、 使用gulp构建文案书写工作流")]),a._v(" "),s("h3",{attrs:{id:"_1-快速入门"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#_1-快速入门"}},[a._v("#")]),a._v(" 1. 快速入门")]),a._v(" "),s("h4",{attrs:{id:"安装-gulp-命令行工具"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#安装-gulp-命令行工具"}},[a._v("#")]),a._v(" 安装 gulp 命令行工具")]),a._v(" "),s("div",{staticClass:"language-bash line-numbers-mode"},[s("pre",{pre:!0,attrs:{class:"language-bash"}},[s("code",[s("span",{pre:!0,attrs:{class:"token function"}},[a._v("npm")]),a._v(" "),s("span",{pre:!0,attrs:{class:"token function"}},[a._v("install")]),a._v(" "),s("span",{pre:!0,attrs:{class:"token parameter variable"}},[a._v("--global")]),a._v(" gulp-cli\n")])]),a._v(" "),s("div",{staticClass:"line-numbers-wrapper"},[s("span",{staticClass:"line-number"},[a._v("1")]),s("br")])]),s("p",[a._v("gulp-cli是gulp的命令行工具，它需要全局安装，以便gulp能够在命令提示符中直接运行。gulp-cli是本地 gulp的全局的入口，负责把所有参数转发到本地gulp，还有显示项目里安装的本地gulp的版本。")]),a._v(" "),s("p",[a._v("全局gulp用于启动各个项目中的本地gulp，换句话说，如果在全局安装了gulp-cli，那么就可以在不同的项目 中使用不同的gulp版本。")]),a._v(" "),s("h4",{attrs:{id:"安装-gulp-作为开发时依赖项"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#安装-gulp-作为开发时依赖项"}},[a._v("#")]),a._v(" 安装 gulp，作为开发时依赖项")]),a._v(" "),s("div",{staticClass:"language-bash line-numbers-mode"},[s("pre",{pre:!0,attrs:{class:"language-bash"}},[s("code",[s("span",{pre:!0,attrs:{class:"token function"}},[a._v("yarn")]),a._v(" "),s("span",{pre:!0,attrs:{class:"token function"}},[a._v("add")]),a._v(" gulp "),s("span",{pre:!0,attrs:{class:"token parameter variable"}},[a._v("--dev")]),a._v("\n")])]),a._v(" "),s("div",{staticClass:"line-numbers-wrapper"},[s("span",{staticClass:"line-number"},[a._v("1")]),s("br")])]),s("h4",{attrs:{id:"创建-gulpfile-文件"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#创建-gulpfile-文件"}},[a._v("#")]),a._v(" 创建 gulpfile 文件")]),a._v(" "),s("p",[a._v("在项目目录下创建一个名为 gulpfile.js 的文件")]),a._v(" "),s("h3",{attrs:{id:"_2-gulp基本api"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#_2-gulp基本api"}},[a._v("#")]),a._v(" 2. gulp基本API")]),a._v(" "),s("h4",{attrs:{id:"概念"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#概念"}},[a._v("#")]),a._v(" 概念")]),a._v(" "),s("h5",{attrs:{id:"vinyl"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#vinyl"}},[a._v("#")]),a._v(" Vinyl")]),a._v(" "),s("p",[a._v("Vinyl 是描述文件的元数据对象。Vinyl 实例的主要属性是文件系统中文件核心的 path 和 contents 核心方面。Vinyl 对象可用于描述来自多个源的文件（本地文件系统或任何远程存储选项上）\nVinyl 适配器\nVinyl 提供了一种描述文件的方法，但是需要一种访问这些文件的方法。使用 Vinyl 适配器访问每个文件源。")]),a._v(" "),s("h5",{attrs:{id:"适配器暴露了"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#适配器暴露了"}},[a._v("#")]),a._v(" 适配器暴露了：")]),a._v(" "),s("p",[a._v("一个签名为 src(globs, [options]) 的方法，返回一个生成 Vinyl 对象的流。\n一个带有签名为 dest(folder, [options]) 的方法，返回一个使用 Vinyl 对象的流。\n任何特定于其输入/输出媒体的额外方法-例如 symlink 方法 vinyl-fs 所提供的。它们应该总是返回产生和/或消耗 Vinyl 对象的流。")]),a._v(" "),s("h5",{attrs:{id:"任务-tasks"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#任务-tasks"}},[a._v("#")]),a._v(" 任务（Tasks）")]),a._v(" "),s("p",[a._v("每个 gulp 任务都是一个异步 JavaScript 函数，它要么接受一个错误优先回调，要么返回一个流、promise、事件发射器、子进程或observable。由于一些平台限制，不支持同步任务。")]),a._v(" "),s("h5",{attrs:{id:"globs"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#globs"}},[a._v("#")]),a._v(" Globs")]),a._v(" "),s("p",[a._v("glob 是一串文字和/或通配符，如 *, **, 或 !，用于匹配文件路径。Globbing 是使用一个或多个 globs 在文件系统上定位文件的操作。")])])}),[],!1,null,null,null);s.default=r.exports}}]);