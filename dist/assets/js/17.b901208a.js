(window.webpackJsonp=window.webpackJsonp||[]).push([[17],{292:function(s,e,n){"use strict";n.r(e);var t=n(14),a=Object(t.a)({},(function(){var s=this,e=s._self._c;return e("ContentSlotsDistributor",{attrs:{"slot-key":s.$parent.slotKey}},[e("h1",{attrs:{id:"指南"}},[e("a",{staticClass:"header-anchor",attrs:{href:"#指南"}},[s._v("#")]),s._v(" 指南")]),s._v(" "),e("h2",{attrs:{id:"介绍"}},[e("a",{staticClass:"header-anchor",attrs:{href:"#介绍"}},[s._v("#")]),s._v(" 介绍")]),s._v(" "),e("p",[s._v("VuePress 由两部分组成：第一部分是一个极简静态网站生成器 (opens new window)，它包含由 Vue 驱动的主题系统和插件 API，另一个部分是为书写技术文档而优化的默认主题，它的诞生初衷是为了支持 Vue 及其子项目的文档需求。")]),s._v(" "),e("p",[s._v("每一个由 VuePress 生成的页面都带有预渲染好的 HTML，也因此具有非常好的加载性能和搜索引擎优化（SEO）。同时，一旦页面被加载，Vue 将接管这些静态内容，并将其转换成一个完整的单页应用（SPA），其他的页面则会只在用户浏览到的时候才按需加载。")]),s._v(" "),e("h3",{attrs:{id:"它是如何工作的"}},[e("a",{staticClass:"header-anchor",attrs:{href:"#它是如何工作的"}},[s._v("#")]),s._v(" 它是如何工作的？")]),s._v(" "),e("p",[s._v("事实上，一个 VuePress 网站是一个由 Vue (opens new window)、Vue Router (opens new window)和 webpack (opens new window)驱动的单页应用。如果你以前使用过 Vue 的话，当你在开发一个自定义主题的时候，你会感受到非常熟悉的开发体验，你甚至可以使用 Vue DevTools 去调试你的自定义主题。")]),s._v(" "),e("p",[s._v("在构建时，我们会为应用创建一个服务端渲染（SSR）的版本，然后通过虚拟访问每一条路径来渲染对应的HTML。这种做法的灵感来源于 Nuxt (opens new window)的 nuxt generate 命令，以及其他的一些项目，比如 Gatsby (opens new window)。")]),s._v(" "),e("h3",{attrs:{id:"features"}},[e("a",{staticClass:"header-anchor",attrs:{href:"#features"}},[s._v("#")]),s._v(" Features")]),s._v(" "),e("p",[s._v("内置的 Markdown 拓展")]),s._v(" "),e("p",[s._v("目录\n自定义容器\n代码块中的行高亮\n行号\n导入代码段\n在 Markdown 中 使用 Vue")]),s._v(" "),e("p",[s._v("模板语法\n使用组件\nVue驱动的自定义主题系统")]),s._v(" "),e("p",[s._v("网站和页面的元数据\n内容摘抄\n默认主题")]),s._v(" "),e("p",[s._v("Responsive layout\n首页\n内置的搜索\nAlgolia 搜索\n可定制的 navbar and sidebar\n自动生成的 GitHub 链接和页面编辑链接\nPWA: 刷新内容的 Popup\n最后更新时间\n多语言支持\n博客主题")]),s._v(" "),e("p",[s._v("文档(opens new window)\n在线案例(opens new window)\nPlugin")]),s._v(" "),e("p",[s._v("强大的 Plugin API\n博客插件(opens new window)\nPWA 插件\nGoogle Analytics 插件\n...")]),s._v(" "),e("h3",{attrs:{id:"为什么不是"}},[e("a",{staticClass:"header-anchor",attrs:{href:"#为什么不是"}},[s._v("#")]),s._v(" 为什么不是...?")]),s._v(" "),e("p",[s._v("Nuxt\nVuePress 能做的事情，Nuxt 理论上确实能够胜任，但 Nuxt 是为构建应用程序而生的，而 VuePress 则专注在以内容为中心的静态网站上，同时提供了一些为技术文档定制的开箱即用的特性。")]),s._v(" "),e("p",[s._v("Docsify / Docute\n这两个项目同样都是基于 Vue，然而它们都是完全的运行时驱动，因此对 SEO 不够友好。如果你并不关注 SEO，同时也不想安装大量依赖，它们仍然是非常好的选择！")]),s._v(" "),e("p",[s._v("Hexo\nHexo 一直驱动着 Vue 的文档 —— 事实上，在把我们的主站从 Hexo 迁移到 VuePress 之前，我们可能还有很长的路要走。Hexo 最大的问题在于他的主题系统太过于静态以及过度地依赖纯字符串，而我们十分希望能够好好地利用 Vue 来处理我们的布局和交互，同时，Hexo 的 Markdown 渲染的配置也不是最灵活的。")]),s._v(" "),e("p",[s._v("GitBook\n我们的子项目文档一直都在使用 GitBook。GitBook 最大的问题在于当文件很多时，每次编辑后的重新加载时间长得令人无法忍受。它的默认主题导航结构也比较有限制性，并且，主题系统也不是 Vue 驱动的。GitBook 背后的团队如今也更专注于将其打造为一个商业产品而不是开源工具。")]),s._v(" "),e("h2",{attrs:{id:"快速上手"}},[e("a",{staticClass:"header-anchor",attrs:{href:"#快速上手"}},[s._v("#")]),s._v(" 快速上手")]),s._v(" "),e("p",[s._v("本文会帮助你从头搭建一个简单的 VuePress 文档。如果你想在一个现有项目中使用 VuePress 管理文档，从步骤 3 开始。")]),s._v(" "),e("h2",{attrs:{id:"创建并进入一个新目录"}},[e("a",{staticClass:"header-anchor",attrs:{href:"#创建并进入一个新目录"}},[s._v("#")]),s._v(" 创建并进入一个新目录")]),s._v(" "),e("p",[s._v("mkdir vuepress-starter && cd vuepress-starter\n使用你喜欢的包管理器进行初始化")]),s._v(" "),e("h3",{attrs:{id:"yarn-init-npm-init"}},[e("a",{staticClass:"header-anchor",attrs:{href:"#yarn-init-npm-init"}},[s._v("#")]),s._v(" yarn init # npm init")]),s._v(" "),e("p",[s._v("将 VuePress 安装为本地依赖")]),s._v(" "),e("h3",{attrs:{id:"我们已经不再推荐全局安装-vuepress"}},[e("a",{staticClass:"header-anchor",attrs:{href:"#我们已经不再推荐全局安装-vuepress"}},[s._v("#")]),s._v(" 我们已经不再推荐全局安装 VuePress")]),s._v(" "),e("p",[s._v("yarn add -D vuepress # npm install -D vuepress\n注意")]),s._v(" "),e("p",[s._v("如果你的现有项目依赖了 webpack 3.x，我们推荐使用 Yarn (opens new window)而不是 npm 来安装 VuePress。因为在这种情形下，npm 会生成错误的依赖树。")]),s._v(" "),e("h2",{attrs:{id:"创建你的第一篇文档"}},[e("a",{staticClass:"header-anchor",attrs:{href:"#创建你的第一篇文档"}},[s._v("#")]),s._v(" 创建你的第一篇文档")]),s._v(" "),e("p",[s._v("mkdir docs && echo '# Hello VuePress' > docs/README.md\n在 package.json 中添加一些 scripts(opens new window)")]),s._v(" "),e("p",[s._v("这一步骤是可选的，但我们推荐你完成它。在下文中，我们会默认这些 scripts 已经被添加。")]),s._v(" "),e("p",[s._v('{\n"scripts": {\n"docs:dev": "vuepress dev docs",\n"docs:build": "vuepress build docs"\n}\n}\n在本地启动服务器')]),s._v(" "),e("p",[s._v("yarn docs:dev # npm run docs:dev\nVuePress 会在 http://localhost:8080 (opens new window)启动一个热重载的开发服务器。")]),s._v(" "),e("p",[s._v("现在，你应该已经有了一个简单可用的 VuePress 文档。接下来，了解一下推荐的 目录结构 和 VuePress 中的 基本配置。")]),s._v(" "),e("p",[s._v("等你了解完上文介绍的基础概念，再去学习一下如何使用 静态资源，Markdown 拓展 和 在 Markdown 中使用 Vue 来丰富你的文档内容。")]),s._v(" "),e("p",[s._v("当你的文档逐渐成型的时候，不要忘记 VuePress 的 多语言支持 并了解一下如何将你的文档 部署 到任意")]),s._v(" "),e("div",{staticClass:"language-js line-numbers-mode"},[e("pre",{pre:!0,attrs:{class:"language-js"}},[e("code",[e("span",{pre:!0,attrs:{class:"token keyword"}},[s._v("export")]),s._v(" "),e("span",{pre:!0,attrs:{class:"token keyword"}},[s._v("default")]),s._v(" "),e("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("{")]),s._v("\n  "),e("span",{pre:!0,attrs:{class:"token literal-property property"}},[s._v("name")]),e("span",{pre:!0,attrs:{class:"token operator"}},[s._v(":")]),s._v(" "),e("span",{pre:!0,attrs:{class:"token string"}},[s._v("'MyComponent'")]),e("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(",")]),s._v("\n  "),e("span",{pre:!0,attrs:{class:"token comment"}},[s._v("// ...")]),s._v("\n"),e("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("}")]),s._v("\n")])]),s._v(" "),e("div",{staticClass:"line-numbers-wrapper"},[e("span",{staticClass:"line-number"},[s._v("1")]),e("br"),e("span",{staticClass:"line-number"},[s._v("2")]),e("br"),e("span",{staticClass:"line-number"},[s._v("3")]),e("br"),e("span",{staticClass:"line-number"},[s._v("4")]),e("br")])])])}),[],!1,null,null,null);e.default=a.exports}}]);